{"version":3,"sources":["rubik.mjs","components/SingleSquare/SingleSquare.js","components/CubeFace/CubeFace.js","components/OpenedCube/OpenedCube.js","components/SingleCube/SingleCube.js","components/LargeCube/LargeCube.js","App.js","reportWebVitals.js","index.js"],"names":["DI","FRONT","LEFT","RIGHT","BACK","TOP","BOTTOM","slideRow","row","face1","face2","face3","face4","newRow2","newRow3","c","slideRowInverted","newRow4","slideCol","col","newCol2","newCol3","r","slideColInverted","newCol4","slideSideCol","newCol1","slideSideColInverted","rotateFaceClockwise","face","newFace","rotateFaceCounterClockwise","SingleSquare","_ref","value","className","concat","react_default","a","createElement","CubeFace","squares","elementSquares","l","length","push","SingleSquare_SingleSquare","key","OpenedCube","cube","elementFaces","f","CubeFace_CubeFace","SingleCube","position","colors","mesh","useRef","ref","attach","args","color","searchColor","LargeCube","console","log","colorArray","App","_useState","useState","i","setCubeInitialValues","_useState2","Object","slicedToArray","setCube","doCubeMove","move","charAt","doMove","toConsumableArray","commands","elementButtons","_loop","b","character","toLowerCase","toUpperCase","onClick","react_three_fiber_esm","colormanagement","OrbitControls","Stars","fade","depth","intensity","angle","penumbra","react","fallback","OpenedCube_OpenedCube","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.6834d18b.chunk.js","sourcesContent":["// import { exit } from \"process\";\n// import readLine from \"readline\";\n\n// const leitor = readLine.createInterface({\n//     input: process.stdin,\n//     output: process.stdout\n// });\n\n// Constants\nconst DI = 3; // cube dimensions\n\nconst FRONT = 0;\nconst LEFT = 1;\nconst RIGHT = 2;\nconst BACK = 3;\nconst TOP = 4;\nconst BOTTOM = 5;\n\n/*\nconst GREEN = 0;\nconst ORANGE = 1;\nconst RED = 2;\nconst BLUE = 3;\nconst WHITE = 4;\nconst YELLOW = 5;\n\nlet COLORS = ['G', 'O', 'R', 'B', 'W', 'Y'];\n*/\n\n// async function main() {\n\n//     let cube = [[[], [], []], [[], [], []], [[], [], []], [[], [], []], [[], [], []], [[], [], []]];\n\n//     setFace(cube[FRONT], GREEN);\n//     setFace(cube[LEFT], ORANGE);\n//     setFace(cube[RIGHT], RED);\n//     setFace(cube[BACK], BLUE);\n//     setFace(cube[TOP], WHITE);\n//     setFace(cube[BOTTOM], YELLOW);\n\n//     //console.table(cube[FRONT]);\n//     showCube(cube);\n//     process.stdout.write(\"Move: \");\n//     for await (const line of leitor) {\n//         doMove(line, cube);\n//         showCube(cube);\n//         process.stdout.write(\"Move: \");\n//     }\n// }\n//main();\n\nexport function doMove(move, cube) {\n    switch (move.charAt(0)) {\n        case 'U': // U\n            slideRow(0, cube[FRONT], cube[LEFT], cube[BACK], cube[RIGHT]);\n            rotateFaceClockwise(cube[TOP]);\n            break;\n\n        case 'u': // U'\n            slideRowInverted(0, cube[FRONT], cube[LEFT], cube[BACK], cube[RIGHT]);\n            rotateFaceCounterClockwise(cube[TOP]);\n            break;\n\n        case 'D': // D\n            slideRowInverted(2, cube[FRONT], cube[LEFT], cube[BACK], cube[RIGHT]);\n            rotateFaceClockwise(cube[BOTTOM]);\n            break;\n\n        case 'd': // D'\n            slideRow(2, cube[FRONT], cube[LEFT], cube[BACK], cube[RIGHT]);\n            rotateFaceCounterClockwise(cube[BOTTOM]);\n            break;\n\n        case 'L': // L\n            slideColInverted(0, cube[FRONT], cube[TOP], cube[BACK], cube[BOTTOM]);\n            rotateFaceClockwise(cube[LEFT]);\n            break;\n\n        case 'l': // L'\n            slideCol(0, cube[FRONT], cube[TOP], cube[BACK], cube[BOTTOM]);\n            rotateFaceCounterClockwise(cube[LEFT]);\n            break;\n\n        case 'R': // R\n            slideCol(2, cube[FRONT], cube[TOP], cube[BACK], cube[BOTTOM]);\n            rotateFaceClockwise(cube[RIGHT]);\n            break;\n\n        case 'r': // R'\n            slideColInverted(2, cube[FRONT], cube[TOP], cube[BACK], cube[BOTTOM]);\n            rotateFaceCounterClockwise(cube[RIGHT]);\n            break;\n\n        case 'F': // F\n            rotateFaceClockwise(cube[FRONT]);\n            slideSideColInverted(0, cube[RIGHT], cube[TOP], cube[LEFT], cube[BOTTOM]);\n            break;\n\n        case 'f': // F'\n            rotateFaceCounterClockwise(cube[FRONT]);\n            slideSideCol(0, cube[RIGHT], cube[TOP], cube[LEFT], cube[BOTTOM]);\n            break;\n\n        case 'B': // B\n            rotateFaceCounterClockwise(cube[BACK]);\n            slideSideCol(2, cube[RIGHT], cube[TOP], cube[LEFT], cube[BOTTOM]);\n            break;\n\n        case 'b': // B'\n            rotateFaceClockwise(cube[BACK]);\n            slideSideColInverted(2, cube[RIGHT], cube[TOP], cube[LEFT], cube[BOTTOM]);\n            break;\n\n        case '0': // Exit\n            // exit();\n            break;\n\n        default:\n            break;\n    }\n}\n\n/*\nfunction setFace(face, value) {\n    for (let l = 0; l < DI; l++) {\n        for (let c = 0; c < DI; c++) {\n            face[l][c] = value;\n        }\n    }\n}\n*/\n\n// function showRow(row, face) {\n//     for (let i = 0; i < DI; i++) {\n//         process.stdout.write(COLORS[face[row][i]]);\n//     }\n//     process.stdout.write(\" \");\n// }\n\n// function showRowInverted(row, face) {\n//     for (let i = DI - 1; i >= 0; i--) {\n//         process.stdout.write(COLORS[face[row][i]]);\n//     }\n//     process.stdout.write(\" \");\n\n// }\n\n// function showBlankRow() {\n//     for (let i = 0; i <= DI; i++) {\n//         process.stdout.write(\" \");\n//     }\n// }\n\n// function showCube(cube) {\n//     console.log(\"=== CUBE ===\");\n//     // upper section\n//     for (let i = 0; i < DI; i++) {\n//         showBlankRow();\n//         showRow(i, cube[TOP]);\n//         console.log();\n//     }\n//     // middle section\n//     for (let i = 0; i < DI; i++) {\n//         showRow(i, cube[LEFT]);\n//         showRow(i, cube[FRONT]);\n//         showRow(i, cube[RIGHT]);\n//         showRowInverted(i, cube[BACK]);\n//         console.log();\n//     }\n//     // lower section\n//     for (let i = 0; i < DI; i++) {\n//         showBlankRow();\n//         showRow(i, cube[BOTTOM]);\n//         console.log();\n//     }\n// }\n\nfunction slideRow(row, face1, face2, face3, face4) {\n    let newRow2 = [];\n    let newRow3 = [];\n    for (let c = 0; c < DI; c++) {\n        newRow2[c] = face1[row][c];\n    }\n    for (let c = 0; c < DI; c++) {\n        face1[row][c] = face4[row][c];\n        face4[row][c] = face3[row][DI - 1 - c];\n        newRow3[c] = face2[row][DI - 1 - c];\n    }\n    for (let c = 0; c < DI; c++) {\n        face2[row][c] = newRow2[c];\n        face3[row][c] = newRow3[c];\n    }\n}\n\nfunction slideRowInverted(row, face1, face2, face3, face4) {\n    let newRow4 = [];\n    let newRow3 = [];\n    for (let c = 0; c < DI; c++) {\n        newRow4[c] = face1[row][c];\n    }\n    for (let c = 0; c < DI; c++) {\n        face1[row][c] = face2[row][c];\n        face2[row][c] = face3[row][DI - 1 - c];\n        newRow3[c] = face4[row][DI - 1 - c];\n    }\n    for (let c = 0; c < DI; c++) {\n        face4[row][c] = newRow4[c];\n        face3[row][c] = newRow3[c];\n    }\n}\n\nfunction slideCol(col, face1, face2, face3, face4) {\n    let newCol2 = [];\n    let newCol3 = [];\n    for (let r = 0; r < DI; r++) {\n        newCol2[r] = face1[r][col];\n    }\n    for (let r = 0; r < DI; r++) {\n        face1[r][col] = face4[r][col];\n        face4[r][col] = face3[DI - 1 - r][col];\n        newCol3[r] = face2[DI - 1 - r][col];\n    }\n    for (let r = 0; r < DI; r++) {\n        face2[r][col] = newCol2[r];\n        face3[r][col] = newCol3[r];\n    }\n}\n\nfunction slideColInverted(col, face1, face2, face3, face4) {\n    let newCol4 = [];\n    let newCol3 = [];\n    for (let r = 0; r < DI; r++) {\n        newCol4[r] = face1[r][col];\n    }\n    for (let r = 0; r < DI; r++) {\n        face1[r][col] = face2[r][col];\n        face2[r][col] = face3[DI - 1 - r][col];\n        newCol3[r] = face4[DI - 1 - r][col];\n    }\n    for (let r = 0; r < DI; r++) {\n        face4[r][col] = newCol4[r];\n        face3[r][col] = newCol3[r];\n    }\n}\n\nfunction slideSideCol(col, face1, face2, face3, face4) {\n    let newCol1 = [];\n    let newCol2 = [];\n    let newCol3 = [];\n    let newCol4 = [];\n    for (let r = 0; r < DI; r++) {\n        newCol1[r] = face4[col][DI - 1 - r];\n        newCol2[r] = face1[r][col];\n        newCol3[r] = face2[DI - 1 - col][DI - 1 - r];\n        newCol4[r] = face3[r][DI - 1 - col];\n    }\n    for (let r = 0; r < DI; r++) {\n        face1[r][col] = newCol1[r];\n        face2[DI - 1 - col][r] = newCol2[r];\n        face3[r][DI - 1 - col] = newCol3[r];\n        face4[col][r] = newCol4[r];\n    }\n}\n\nfunction slideSideColInverted(col, face1, face2, face3, face4) {\n    let newCol1 = [];\n    let newCol2 = [];\n    let newCol3 = [];\n    let newCol4 = [];\n    for (let r = 0; r < DI; r++) {\n        newCol1[r] = face2[DI - 1 - col][r];\n        newCol2[r] = face3[DI - 1 - r][DI - 1 - col];\n        newCol3[r] = face4[col][r];\n        newCol4[r] = face1[DI - 1 - r][col];\n    }\n    for (let r = 0; r < DI; r++) {\n        face1[r][col] = newCol1[r];\n        face2[DI - 1 - col][r] = newCol2[r];\n        face3[r][DI - 1 - col] = newCol3[r];\n        face4[col][r] = newCol4[r];\n    }\n}\n\nfunction rotateFaceClockwise(face) {\n    let newFace = [[], [], []];\n    for (let r = 0; r < DI; r++) {\n        for (let c = 0; c < DI; c++) {\n            newFace[r][c] = face[DI - 1 - c][r];\n        }\n    }\n    for (let r = 0; r < DI; r++) {\n        for (let c = 0; c < DI; c++) {\n            face[r][c] = newFace[r][c];\n        }\n    }\n}\n\nfunction rotateFaceCounterClockwise(face) {\n    let newFace = [[], [], []];\n    for (let r = 0; r < DI; r++) {\n        for (let c = 0; c < DI; c++) {\n            newFace[r][c] = face[c][DI - 1 - r];\n        }\n    }\n    for (let r = 0; r < DI; r++) {\n        for (let c = 0; c < DI; c++) {\n            face[r][c] = newFace[r][c];\n        }\n    }\n}","import React from \"react\";\nimport \"./SingleSquare.css\";\n\nexport default function SingleSquare({value}) {\n  const className = `single-square color-${value}`;\n  return (<div className={className}>{value}</div>)\n}\n","import React from \"react\";\nimport \"./CubeFace.css\";\nimport SingleSquare from \"../SingleSquare/SingleSquare.js\";\n\nexport default function CubeFace({ squares, face }) {\n  const elementSquares = [];\n  for (let l = 0; l < squares.length; l++) {\n    for (let c = 0; c < squares[0].length; c++) {\n      elementSquares.push(<SingleSquare value={squares[l][c]} key={face * 9 + l * 3 + c} />);\n    }\n  }\n  const className = `cube-face face-${face}`;\n  return (<div className={className}>{elementSquares}</div>);\n}\n","import React from \"react\";\nimport CubeFace from \"../CubeFace/CubeFace\";\nimport \"./OpenedCube.css\"\n\nexport default function OpenedCube({ cube }) {\n    const elementFaces = [];\n    for (let f = 0; f < cube.length; f++) {\n        elementFaces.push(<CubeFace squares={cube[f]} face={f} key={f} />)\n    }\n    return (<div className=\"opened-cube\">{elementFaces}</div>);\n}","import React, { useRef } from \"react\";\n\nexport default function SingleCube({ position, colors }) {\n  const mesh = useRef();\n  return (\n    <mesh position={position} ref={mesh}>\n      <boxBufferGeometry attach=\"geometry\" args={[0.95, 0.95, 0.95]} />\n      <meshLambertMaterial attach={`material-0`} color={colors[0]} />\n      <meshLambertMaterial attach={`material-1`} color={colors[1]} />\n      <meshLambertMaterial attach={`material-2`} color={colors[2]} />\n      <meshLambertMaterial attach={`material-3`} color={colors[3]} />\n      <meshLambertMaterial attach={`material-4`} color={colors[4]} />\n      <meshLambertMaterial attach={`material-5`} color={colors[5]} />\n    </mesh>\n  );\n}","import React, { useRef } from \"react\";\nimport SingleCube from \"../SingleCube/SingleCube\";\n\n// constantes de cores\nconst FRONT = 0;\nconst LEFT = 1;\nconst RIGHT = 2;\nconst BACK = 3;\nconst TOP = 4;\nconst BOTTOM = 5;\n\n//constantes de posição\n/*\n  right 0\n  left 1\n  top 2\n  bottom 3\n  front 4\n  back 5\n*/\n\nfunction searchColor(value) {\n  switch (value) {\n    case 0:\n      return \"#2ECC71\";\n\n    case 1:\n      return \"#E67E22\";\n\n    case 2:\n      return \"#C0392B\";\n\n    case 3:\n      return \"#3498DB\";\n\n    case 4:\n      return \"#ECF0F1\";\n\n    case 5:\n      return \"#F1C40F\";\n\n    default:\n      break;\n  }\n}\n\nexport default function LargeCube({ cube }) {\n  const mesh = useRef();\n  console.log(searchColor(cube[LEFT][0][0]));\n  const colorArray = [\n    [\n      \"#ffffff\",\n      searchColor(cube[LEFT][0][2]),\n      searchColor(cube[TOP][2][0]),\n      \"#ffffff\",\n      searchColor(cube[FRONT][0][0]),\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[TOP][2][1]),\n      \"#ffffff\",\n      searchColor(cube[FRONT][0][1]),\n      \"#ffffff\",\n    ],\n    [\n      searchColor(cube[RIGHT][0][0]),\n      \"#ffffff\",\n      searchColor(cube[TOP][2][2]),\n      \"#ffffff\",\n      searchColor(cube[FRONT][0][2]),\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      searchColor(cube[LEFT][1][2]),\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[FRONT][1][0]),\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[FRONT][1][1]),\n      \"#ffffff\",\n    ],\n    [\n      searchColor(cube[RIGHT][1][0]),\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[FRONT][1][2]),\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      searchColor(cube[LEFT][2][2]),\n      \"#ffffff\",\n      searchColor(cube[BOTTOM][0][0]),\n      searchColor(cube[FRONT][2][0]),\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BOTTOM][0][1]),\n      searchColor(cube[FRONT][2][1]),\n      \"#ffffff\",\n    ],\n    [\n      searchColor(cube[RIGHT][2][0]),\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BOTTOM][0][2]),\n      searchColor(cube[FRONT][2][2]),\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      searchColor(cube[LEFT][0][1]),\n      searchColor(cube[TOP][1][0]),\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[TOP][1][1]),\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n    ],\n    [\n      searchColor(cube[RIGHT][0][1]),\n      \"#ffffff\",\n      searchColor(cube[TOP][1][2]),\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      searchColor(cube[LEFT][1][1]),\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n    ],\n    [\"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#ffffff\"],\n    [\n      searchColor(cube[RIGHT][1][1]),\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      searchColor(cube[LEFT][2][1]),\n      \"#ffffff\",\n      searchColor(cube[BOTTOM][1][0]),\n      \"#ffffff\",\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BOTTOM][1][1]),\n      \"#ffffff\",\n      \"#ffffff\",\n    ],\n    [\n      searchColor(cube[RIGHT][2][1]),\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BOTTOM][1][2]),\n      \"#ffffff\",\n      \"#ffffff\",\n    ],\n    [\n      \"#ffffff\",\n      searchColor(cube[LEFT][0][0]),\n      searchColor(cube[TOP][0][0]),\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BACK][0][0]),\n    ],\n    [\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[TOP][0][1]),\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BACK][0][1]),\n    ],\n    [\n      searchColor(cube[RIGHT][0][2]),\n      \"#ffffff\",\n      searchColor(cube[TOP][0][2]),\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BACK][0][2]),\n    ],\n    [\n      \"#ffffff\",\n      searchColor(cube[LEFT][1][0]),\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BACK][1][0]),\n    ],\n    [\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BACK][1][1]),\n    ],\n    [\n      searchColor(cube[RIGHT][1][2]),\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BACK][1][2]),\n    ],\n    [\n      \"#ffffff\",\n      searchColor(cube[LEFT][2][0]),\n      \"#ffffff\",\n      searchColor(cube[BOTTOM][2][0]),\n      \"#ffffff\",\n      searchColor(cube[BACK][2][0]),\n    ],\n    [\n      \"#ffffff\",\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BOTTOM][2][1]),\n      \"#ffffff\",\n      searchColor(cube[BACK][2][1]),\n    ],\n    [\n      searchColor(cube[RIGHT][2][2]),\n      \"#ffffff\",\n      \"#ffffff\",\n      searchColor(cube[BOTTOM][2][2]),\n      \"#ffffff\",\n      searchColor(cube[BACK][2][2]),\n    ],\n  ];\n\n  return (\n    <mesh ref={mesh}>\n      <SingleCube position={[-1, 1, 1]} colors={colorArray[0]} />\n      <SingleCube position={[0, 1, 1]} colors={colorArray[1]} />\n      <SingleCube position={[1, 1, 1]} colors={colorArray[2]} />\n\n      <SingleCube position={[-1, 0, 1]} colors={colorArray[3]} />\n      <SingleCube position={[0, 0, 1]} colors={colorArray[4]} />\n      <SingleCube position={[1, 0, 1]} colors={colorArray[5]} />\n\n      <SingleCube position={[-1, -1, 1]} colors={colorArray[6]} />\n      <SingleCube position={[0, -1, 1]} colors={colorArray[7]} />\n      <SingleCube position={[1, -1, 1]} colors={colorArray[8]} />\n\n      <SingleCube position={[-1, 1, 0]} colors={colorArray[9]} />\n      <SingleCube position={[0, 1, 0]} colors={colorArray[10]} />\n      <SingleCube position={[1, 1, 0]} colors={colorArray[11]} />\n\n      <SingleCube position={[-1, 0, 0]} colors={colorArray[12]} />\n      <SingleCube position={[0, 0, 0]} colors={colorArray[13]} />\n      <SingleCube position={[1, 0, 0]} colors={colorArray[14]} />\n\n      <SingleCube position={[-1, -1, 0]} colors={colorArray[15]} />\n      <SingleCube position={[0, -1, 0]} colors={colorArray[16]} />\n      <SingleCube position={[1, -1, 0]} colors={colorArray[17]} />\n\n      <SingleCube position={[-1, 1, -1]} colors={colorArray[18]} />\n      <SingleCube position={[0, 1, -1]} colors={colorArray[19]} />\n      <SingleCube position={[1, 1, -1]} colors={colorArray[20]} />\n\n      <SingleCube position={[-1, 0, -1]} colors={colorArray[21]} />\n      <SingleCube position={[0, 0, -1]} colors={colorArray[22]} />\n      <SingleCube position={[1, 0, -1]} colors={colorArray[23]} />\n\n      <SingleCube position={[-1, -1, -1]} colors={colorArray[24]} />\n      <SingleCube position={[0, -1, -1]} colors={colorArray[25]} />\n      <SingleCube position={[1, -1, -1]} colors={colorArray[26]} />\n    </mesh>\n  );\n}\n","import React, { useState, Suspense } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls, Stars } from \"@react-three/drei\";\nimport { doMove } from \"./rubik.mjs\";\nimport OpenedCube from \"./components/OpenedCube/OpenedCube\";\nimport LargeCube from \"./components/LargeCube/LargeCube.js\";\nimport \"./App.css\";\n\nexport default function App() {\n  //const cube =  setCubeInitialValues();\n  const [cube, setCube] = useState(setCubeInitialValues());\n\n  function doCubeMove(move) {\n    doMove(move, cube);\n    setCube([...cube]);\n  }\n  const commands = [\"L\", \"R\", \"U\", \"D\", \"F\", \"B\", \"l\", \"r\", \"u\", \"d\", \"f\", \"b\"];\n  const elementButtons = [];\n  for (let b = 0; b < commands.length; b++) {\n    let character = commands[b];\n    if (character === character.toLowerCase()) {\n      character = character.toUpperCase();\n      character += \"'\";\n    }\n    elementButtons.push(\n      <button\n        className=\"move-button\"\n        key={b}\n        onClick={function click() {\n          doCubeMove(commands[b]);\n        }}\n      >\n        {character}\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Rubik's Cube</h1>\n      <Canvas colormanagement>\n        <OrbitControls />\n        <Stars fade depth={1.2}/>\n        <ambientLight intensity={0.2} />\n        <spotLight position={[10, 10, 10]} angle={0.15} penumbra={1} />\n        <pointLight position={[-10, -10, -10]} />\n        <Suspense fallback={null}>\n          <LargeCube cube={cube}/>\n        </Suspense>\n      </Canvas>\n      <OpenedCube cube={cube} />\n\n      <div className=\"buttons\">{elementButtons}</div>\n    </div>\n  );\n}\n\nfunction setCubeInitialValues() {\n  let cube = [];\n  for (let i = 0; i < 6; i++) {\n    cube.push([\n      [i, i, i],\n      [i, i, i],\n      [i, i, i],\n    ]);\n  }\n  return cube;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}