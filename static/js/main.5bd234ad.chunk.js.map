{"version":3,"sources":["components/SingleSquare/SingleSquare.js","components/CubeFace/CubeFace.js","components/OpenedCube/OpenedCube.js","rubik.mjs","App.js","reportWebVitals.js","index.js"],"names":["SingleSquare","_ref","value","className","concat","react_default","a","createElement","CubeFace","squares","face","elementSquares","l","length","c","push","SingleSquare_SingleSquare","key","OpenedCube","cube","elementFaces","f","CubeFace_CubeFace","DI","FRONT","LEFT","RIGHT","BACK","TOP","BOTTOM","slideRow","row","face1","face2","face3","face4","newRow2","newRow3","slideRowInverted","newRow4","slideCol","col","newCol2","newCol3","r","slideColInverted","newCol4","slideSideCol","newCol1","slideSideColInverted","rotateFaceClockwise","newFace","rotateFaceCounterClockwise","App","_useState","useState","i","setCubeInitialValues","_useState2","Object","slicedToArray","setCube","doCubeMove","move","charAt","doMove","toConsumableArray","commands","elementButtons","_loop","b","character","toLowerCase","toUpperCase","onClick","OpenedCube_OpenedCube","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.5bd234ad.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./SingleSquare.css\";\r\n\r\nexport default function SingleSquare({value}) {\r\n  const className = `single-square color-${value}`;\r\n  return (<div className={className}>{value}</div>)\r\n}\r\n","import React from \"react\";\r\nimport \"./CubeFace.css\";\r\nimport SingleSquare from \"../SingleSquare/SingleSquare.js\";\r\n\r\nexport default function CubeFace({ squares, face }) {\r\n  const elementSquares = [];\r\n  for (let l = 0; l < squares.length; l++) {\r\n    for (let c = 0; c < squares[0].length; c++) {\r\n      elementSquares.push(<SingleSquare value={squares[l][c]} key={face * 9 + l * 3 + c} />);\r\n    }\r\n  }\r\n  const className = `cube-face face-${face}`;\r\n  return (<div className={className}>{elementSquares}</div>);\r\n}\r\n","import React from \"react\";\r\nimport CubeFace from \"../CubeFace/CubeFace\";\r\nimport \"./OpenedCube.css\"\r\n\r\nexport default function OpenedCube({ cube }) {\r\n    const elementFaces = [];\r\n    for (let f = 0; f < cube.length; f++) {\r\n        elementFaces.push(<CubeFace squares={cube[f]} face={f} key={f} />)\r\n    }\r\n    return (<div className=\"opened-cube\">{elementFaces}</div>);\r\n}","// import { exit } from \"process\";\r\n// import readLine from \"readline\";\r\n\r\n// const leitor = readLine.createInterface({\r\n//     input: process.stdin,\r\n//     output: process.stdout\r\n// });\r\n\r\n// Constants\r\nconst DI = 3; // cube dimensions\r\n\r\nconst FRONT = 0;\r\nconst LEFT = 1;\r\nconst RIGHT = 2;\r\nconst BACK = 3;\r\nconst TOP = 4;\r\nconst BOTTOM = 5;\r\n\r\n/*\r\nconst GREEN = 0;\r\nconst ORANGE = 1;\r\nconst RED = 2;\r\nconst BLUE = 3;\r\nconst WHITE = 4;\r\nconst YELLOW = 5;\r\n\r\nlet COLORS = ['G', 'O', 'R', 'B', 'W', 'Y'];\r\n*/\r\n\r\n// async function main() {\r\n\r\n//     let cube = [[[], [], []], [[], [], []], [[], [], []], [[], [], []], [[], [], []], [[], [], []]];\r\n\r\n//     setFace(cube[FRONT], GREEN);\r\n//     setFace(cube[LEFT], ORANGE);\r\n//     setFace(cube[RIGHT], RED);\r\n//     setFace(cube[BACK], BLUE);\r\n//     setFace(cube[TOP], WHITE);\r\n//     setFace(cube[BOTTOM], YELLOW);\r\n\r\n//     //console.table(cube[FRONT]);\r\n//     showCube(cube);\r\n//     process.stdout.write(\"Move: \");\r\n//     for await (const line of leitor) {\r\n//         doMove(line, cube);\r\n//         showCube(cube);\r\n//         process.stdout.write(\"Move: \");\r\n//     }\r\n// }\r\n//main();\r\n\r\nexport function doMove(move, cube) {\r\n    switch (move.charAt(0)) {\r\n        case 'U': // U\r\n            slideRow(0, cube[FRONT], cube[LEFT], cube[BACK], cube[RIGHT]);\r\n            rotateFaceClockwise(cube[TOP]);\r\n            break;\r\n\r\n        case 'u': // U'\r\n            slideRowInverted(0, cube[FRONT], cube[LEFT], cube[BACK], cube[RIGHT]);\r\n            rotateFaceCounterClockwise(cube[TOP]);\r\n            break;\r\n\r\n        case 'D': // D\r\n            slideRowInverted(2, cube[FRONT], cube[LEFT], cube[BACK], cube[RIGHT]);\r\n            rotateFaceClockwise(cube[BOTTOM]);\r\n            break;\r\n\r\n        case 'd': // D'\r\n            slideRow(2, cube[FRONT], cube[LEFT], cube[BACK], cube[RIGHT]);\r\n            rotateFaceCounterClockwise(cube[BOTTOM]);\r\n            break;\r\n\r\n        case 'L': // L\r\n            slideColInverted(0, cube[FRONT], cube[TOP], cube[BACK], cube[BOTTOM]);\r\n            rotateFaceClockwise(cube[LEFT]);\r\n            break;\r\n\r\n        case 'l': // L'\r\n            slideCol(0, cube[FRONT], cube[TOP], cube[BACK], cube[BOTTOM]);\r\n            rotateFaceCounterClockwise(cube[LEFT]);\r\n            break;\r\n\r\n        case 'R': // R\r\n            slideCol(2, cube[FRONT], cube[TOP], cube[BACK], cube[BOTTOM]);\r\n            rotateFaceClockwise(cube[RIGHT]);\r\n            break;\r\n\r\n        case 'r': // R'\r\n            slideColInverted(2, cube[FRONT], cube[TOP], cube[BACK], cube[BOTTOM]);\r\n            rotateFaceCounterClockwise(cube[RIGHT]);\r\n            break;\r\n\r\n        case 'F': // F\r\n            rotateFaceClockwise(cube[FRONT]);\r\n            slideSideColInverted(0, cube[RIGHT], cube[TOP], cube[LEFT], cube[BOTTOM]);\r\n            break;\r\n\r\n        case 'f': // F'\r\n            rotateFaceCounterClockwise(cube[FRONT]);\r\n            slideSideCol(0, cube[RIGHT], cube[TOP], cube[LEFT], cube[BOTTOM]);\r\n            break;\r\n\r\n        case 'B': // B\r\n            rotateFaceCounterClockwise(cube[BACK]);\r\n            slideSideCol(2, cube[RIGHT], cube[TOP], cube[LEFT], cube[BOTTOM]);\r\n            break;\r\n\r\n        case 'b': // B'\r\n            rotateFaceClockwise(cube[BACK]);\r\n            slideSideColInverted(2, cube[RIGHT], cube[TOP], cube[LEFT], cube[BOTTOM]);\r\n            break;\r\n\r\n        case '0': // Exit\r\n            // exit();\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\n/*\r\nfunction setFace(face, value) {\r\n    for (let l = 0; l < DI; l++) {\r\n        for (let c = 0; c < DI; c++) {\r\n            face[l][c] = value;\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\n// function showRow(row, face) {\r\n//     for (let i = 0; i < DI; i++) {\r\n//         process.stdout.write(COLORS[face[row][i]]);\r\n//     }\r\n//     process.stdout.write(\" \");\r\n// }\r\n\r\n// function showRowInverted(row, face) {\r\n//     for (let i = DI - 1; i >= 0; i--) {\r\n//         process.stdout.write(COLORS[face[row][i]]);\r\n//     }\r\n//     process.stdout.write(\" \");\r\n\r\n// }\r\n\r\n// function showBlankRow() {\r\n//     for (let i = 0; i <= DI; i++) {\r\n//         process.stdout.write(\" \");\r\n//     }\r\n// }\r\n\r\n// function showCube(cube) {\r\n//     console.log(\"=== CUBE ===\");\r\n//     // upper section\r\n//     for (let i = 0; i < DI; i++) {\r\n//         showBlankRow();\r\n//         showRow(i, cube[TOP]);\r\n//         console.log();\r\n//     }\r\n//     // middle section\r\n//     for (let i = 0; i < DI; i++) {\r\n//         showRow(i, cube[LEFT]);\r\n//         showRow(i, cube[FRONT]);\r\n//         showRow(i, cube[RIGHT]);\r\n//         showRowInverted(i, cube[BACK]);\r\n//         console.log();\r\n//     }\r\n//     // lower section\r\n//     for (let i = 0; i < DI; i++) {\r\n//         showBlankRow();\r\n//         showRow(i, cube[BOTTOM]);\r\n//         console.log();\r\n//     }\r\n// }\r\n\r\nfunction slideRow(row, face1, face2, face3, face4) {\r\n    let newRow2 = [];\r\n    let newRow3 = [];\r\n    for (let c = 0; c < DI; c++) {\r\n        newRow2[c] = face1[row][c];\r\n    }\r\n    for (let c = 0; c < DI; c++) {\r\n        face1[row][c] = face4[row][c];\r\n        face4[row][c] = face3[row][DI - 1 - c];\r\n        newRow3[c] = face2[row][DI - 1 - c];\r\n    }\r\n    for (let c = 0; c < DI; c++) {\r\n        face2[row][c] = newRow2[c];\r\n        face3[row][c] = newRow3[c];\r\n    }\r\n}\r\n\r\nfunction slideRowInverted(row, face1, face2, face3, face4) {\r\n    let newRow4 = [];\r\n    let newRow3 = [];\r\n    for (let c = 0; c < DI; c++) {\r\n        newRow4[c] = face1[row][c];\r\n    }\r\n    for (let c = 0; c < DI; c++) {\r\n        face1[row][c] = face2[row][c];\r\n        face2[row][c] = face3[row][DI - 1 - c];\r\n        newRow3[c] = face4[row][DI - 1 - c];\r\n    }\r\n    for (let c = 0; c < DI; c++) {\r\n        face4[row][c] = newRow4[c];\r\n        face3[row][c] = newRow3[c];\r\n    }\r\n}\r\n\r\nfunction slideCol(col, face1, face2, face3, face4) {\r\n    let newCol2 = [];\r\n    let newCol3 = [];\r\n    for (let r = 0; r < DI; r++) {\r\n        newCol2[r] = face1[r][col];\r\n    }\r\n    for (let r = 0; r < DI; r++) {\r\n        face1[r][col] = face4[r][col];\r\n        face4[r][col] = face3[DI - 1 - r][col];\r\n        newCol3[r] = face2[DI - 1 - r][col];\r\n    }\r\n    for (let r = 0; r < DI; r++) {\r\n        face2[r][col] = newCol2[r];\r\n        face3[r][col] = newCol3[r];\r\n    }\r\n}\r\n\r\nfunction slideColInverted(col, face1, face2, face3, face4) {\r\n    let newCol4 = [];\r\n    let newCol3 = [];\r\n    for (let r = 0; r < DI; r++) {\r\n        newCol4[r] = face1[r][col];\r\n    }\r\n    for (let r = 0; r < DI; r++) {\r\n        face1[r][col] = face2[r][col];\r\n        face2[r][col] = face3[DI - 1 - r][col];\r\n        newCol3[r] = face4[DI - 1 - r][col];\r\n    }\r\n    for (let r = 0; r < DI; r++) {\r\n        face4[r][col] = newCol4[r];\r\n        face3[r][col] = newCol3[r];\r\n    }\r\n}\r\n\r\nfunction slideSideCol(col, face1, face2, face3, face4) {\r\n    let newCol1 = [];\r\n    let newCol2 = [];\r\n    let newCol3 = [];\r\n    let newCol4 = [];\r\n    for (let r = 0; r < DI; r++) {\r\n        newCol1[r] = face4[col][DI - 1 - r];\r\n        newCol2[r] = face1[r][col];\r\n        newCol3[r] = face2[DI - 1 - col][DI - 1 - r];\r\n        newCol4[r] = face3[r][DI - 1 - col];\r\n    }\r\n    for (let r = 0; r < DI; r++) {\r\n        face1[r][col] = newCol1[r];\r\n        face2[DI - 1 - col][r] = newCol2[r];\r\n        face3[r][DI - 1 - col] = newCol3[r];\r\n        face4[col][r] = newCol4[r];\r\n    }\r\n}\r\n\r\nfunction slideSideColInverted(col, face1, face2, face3, face4) {\r\n    let newCol1 = [];\r\n    let newCol2 = [];\r\n    let newCol3 = [];\r\n    let newCol4 = [];\r\n    for (let r = 0; r < DI; r++) {\r\n        newCol1[r] = face2[DI - 1 - col][r];\r\n        newCol2[r] = face3[DI - 1 - r][DI - 1 - col];\r\n        newCol3[r] = face4[col][r];\r\n        newCol4[r] = face1[DI - 1 - r][col];\r\n    }\r\n    for (let r = 0; r < DI; r++) {\r\n        face1[r][col] = newCol1[r];\r\n        face2[DI - 1 - col][r] = newCol2[r];\r\n        face3[r][DI - 1 - col] = newCol3[r];\r\n        face4[col][r] = newCol4[r];\r\n    }\r\n}\r\n\r\nfunction rotateFaceClockwise(face) {\r\n    let newFace = [[], [], []];\r\n    for (let r = 0; r < DI; r++) {\r\n        for (let c = 0; c < DI; c++) {\r\n            newFace[r][c] = face[DI - 1 - c][r];\r\n        }\r\n    }\r\n    for (let r = 0; r < DI; r++) {\r\n        for (let c = 0; c < DI; c++) {\r\n            face[r][c] = newFace[r][c];\r\n        }\r\n    }\r\n}\r\n\r\nfunction rotateFaceCounterClockwise(face) {\r\n    let newFace = [[], [], []];\r\n    for (let r = 0; r < DI; r++) {\r\n        for (let c = 0; c < DI; c++) {\r\n            newFace[r][c] = face[c][DI - 1 - r];\r\n        }\r\n    }\r\n    for (let r = 0; r < DI; r++) {\r\n        for (let c = 0; c < DI; c++) {\r\n            face[r][c] = newFace[r][c];\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport \"./App.css\";\r\nimport OpenedCube from './components/OpenedCube/OpenedCube';\r\nimport { doMove } from './rubik.mjs';\r\n\r\nexport default function App() {\r\n  //const cube =  setCubeInitialValues();\r\n  const [cube, setCube] = useState(setCubeInitialValues());\r\n\r\n  function doCubeMove(move) {\r\n    doMove(move, cube);\r\n    setCube([...cube]);\r\n  }\r\n  const commands = ['L', 'R', 'U', 'D', 'F', 'B', 'l', 'r', 'u', 'd', 'f', 'b'];\r\n  const elementButtons = [];\r\n  for (let b = 0; b < commands.length; b++) {\r\n    let character = commands[b];\r\n    if (character === character.toLowerCase()) {\r\n      character = character.toUpperCase();\r\n      character += \"'\";\r\n    }\r\n    elementButtons.push(\r\n      <button className=\"move-button\" key={b} onClick={function click() { doCubeMove(commands[b]); }}>{character}</button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" >\r\n      <h1 className=\"title\">Rubik's Cube</h1>\r\n\r\n      <OpenedCube cube={cube} />\r\n\r\n      <div className='buttons'>\r\n        {elementButtons}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction setCubeInitialValues() {\r\n  let cube = [];\r\n  for (let i = 0; i < 6; i++) {\r\n    cube.push([[i, i, i], [i, i, i], [i, i, i]]);\r\n  }\r\n  return cube;\r\n}\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}